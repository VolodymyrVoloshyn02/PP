openapi: 3.0.3
info:
  title: Credit service
  description: ''
  version: 1.0.0
paths:
  /user:
    post:
      tags:
        - User
      description: Create new user
      summary: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: Invalid body supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  property_name:
                    type: string
                nullable: false
        '409':
          description: User with such email already exists
      security:
        - bank_auth:
            - 'write:users'
  '/user/{userId}':
    get:
      tags:
        - User
      description: Get user data
      summary: Get user data
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: Invalid Id supplied
        '404':
          description: User not found
      security:
        - bank_auth:
            - 'read:users'
  '/user/{userId}/credit':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Create new credit
      tags:
        - Credit
      responses:
        '201':
          description: Create new credit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credit'
        '400':
          description: Invalid body supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  property_name:
                    type: string
                nullable: false
        '409':
          description: User with such email already exists
      security:
        - bank_auth:
            - 'write:users'
  '/user/{userId}/credit/{creditId}':
    get:
      summary: Get credits data
      tags:
        - Credit
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: creditId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: Get credits data
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credit'
        '400':
          description: Invalid Id supplied
        '404':
          description: User not found
      security:
        - bank_auth:
            - 'read:users'
  '/user/{userId}/credit/{creditId}/transaction':
    put:
      summary: Creat new trasaction
      tags:
        - Transaction
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: creditId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Creat new trasaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        '400':
          description: Invalid Id supplied
        '404':
          description: User not found
      security:
        - bank_auth:
            - 'write:users'
  '/user/{userId}/credit/{creditId}/transaction/{transactionId}':
    get:
      summary: Get information about transaction
      tags:
        - Transaction
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: creditId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: Get user data
      responses:
        '200':
          description: Information about transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        '400':
          description: Invalid Id supplied
        '404':
          description: User not found
      security:
        - bank_auth:
            - 'read:users'
  /bank:
    get:
      summary: Get current money in bank
      tags:
        - Bank
      description: Get current money in bank
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank'
        '400':
          description: Invalid Id supplied
        '404':
          description: User not found
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 3947539c-9c5c-45da-a2fe-62cc2f82f53d
        name:
          type: string
          example: Ivanov Ivan Ivanovich
        passport:
          type: string
          example: Ivanov228UA
        address:
          type: string
          example: 'Lviv, vul. Stryiska 105/25'
        email:
          type: string
          example: ivanoov@gmail.com
        phone_number:
          type: string
          example: '+380666666666'
        money_amount:
          type: integer
          format: int32
          example: 600
      nullable: false
    bank:
      type: object
      properties:
        id:
          type: string
          example: Bank_credit
        all_money:
          type: integer
          format: int32
          maximum: 517000
          example: 500000
        per_cent:
          type: integer
          format: int32
          example: 30
    credit:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 1ec7f5da-7a0e-4aa9-8d6d-af3ee343b3ab
        start_date:
          type: string
          format: date-time
          example: '2020-08-30T11:14:33.001Z'
        end_date:
          type: string
          format: date-time
          example: '2021-08-30T11:14:33.001Z'
        start_sum:
          type: integer
          format: int32
          example: 599
        current_sum:
          type: integer
          format: int32
          example: 300
        bank:
          $ref: '#/components/schemas/bank'
    transaction:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            format: uuid
          date:
            type: string
            format: date-time
            example: '2020-08-30T11:14:33.001Z'
          sum:
            type: integer
            format: int32
          credit:
            $ref: '#/components/schemas/credit'
  securitySchemes:
    bank_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:schedules': modify credits in your bank
            'write:users': modify user info
            'read:users': read user info
servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/Voloshyn/Credits/1.0.0'
